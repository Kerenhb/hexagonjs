.hx-content {
  padding-left: $content-padding;
  padding-right: $content-padding;
  max-width: $content-max-width;
  background: $content-background-col;
}

.hx-heading + .hx-content {
  padding-top: $content-padding;
}

.hx-layout {
  margin: $margin;
}

.hx-group > .hx-section {
  margin: $margin;

  &.hx-btn {
    margin: $margin;
  }
}

// named size classes
.hx-small,
.hx-medium,
.hx-large {
  min-width: $named-class-min-width;
}

.hx-small {
  flex-basis: 21%;
  // fallback to static percentage in case calc is not supported
  flex-basis: unquote("calc(25% - (2 * #{$margin)}))");
}

.hx-medium {
  flex-basis: 40%;
  // fallback to static percentage in case calc is not supported
  flex-basis: unquote("calc(50% - (2 * #{$margin)}))");
}

.hx-large {
  flex-basis: 90%;
  // fallback to static percentage in case calc is not supported
  flex-basis: unquote("calc(100% - (2 * #{$margin)}))");
}

// content breakpoint
@media (max-width: nth($content-breakpoint, 1)) {
  .hx-content {
    max-width: nth($content-breakpoint, 2);
  }
}

$types: ['padding', 'margin'];
$positions: ['', 'top', 'right', 'bottom', 'left'];

@each $pos in $positions {
  $modifier: #{if($pos != '', '-', '')}#{$pos};

  .hx-border#{$modifier} {
    border#{$modifier}: solid 1px $border-col
  }

  .hx-no-border#{$modifier} {
    border#{$modifier}: none !important;
  }

  @each $type in $types {
    $clsType: #{if($type == 'padding', 'pad', $type)};

    .hx-#{$clsType}#{$modifier} {
      #{$type}#{$modifier}: $margin !important;

      .hx-flag-spacing &,
      &.hx-flag-spacing {
        #{$type}#{$modifier}: $spacing !important;
      }
    }
    .hx-no-#{$clsType}#{$modifier} {
      #{$type}#{$modifier}: 0 !important;
    }
  }
}
