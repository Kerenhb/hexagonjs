@version 0.9.0
  @examples
    @example
      @@html
        <button id="menuDefault" class="hx-btn">Default</button>
        <button id="menuDisabled" class="hx-btn">Disabled menu items</button>
        <button id="menuNoSelect" class="hx-btn">Unselectable menu items</button>
        <button id="menuMixed" class="hx-btn">Mixed Items</button>

      @@js
        defaultMenu = new hx.Menu('#menuDefault')
        defaultMenu.render(["item 1","item 2","item 3"])

        var renderer = function(elem, item){
          hx.select(elem).text(item.name)
        }

        disabledMenu = new hx.Menu('#menuDisabled')
        disabledMenu.renderer = renderer
        disabledMenu.render([
          {
            name: 'Disabled Item 1',
            disabled: true
          },{
            name: 'Disabled Item 2',
            disabled: true
          },{
            name: 'Disabled Item 3',
            disabled: true
          }
        ])

        unselectableMenu = new hx.Menu('#menuNoSelect')
        unselectableMenu.renderer = renderer
        unselectableMenu.render([
          {
            name: 'Unselectable Item 1',
            unselectable: true
          },{
            name: 'Unselectable Item 2',
            unselectable: true
          },{
            name: 'Unselectable Item 3',
            unselectable: true
          }
        ])

        mixedMenu = new hx.Menu('#menuMixed')
        mixedMenu.renderer = renderer
        mixedMenu.render([
          {
            name: 'Disabled Item 1',
            disabled: true
          },{
            name: 'Item 1'
          },{
            name: 'Disabled Item 2',
            disabled: true
          },{
            name: 'Unselectable Item 1',
            unselectable: true
          },{
            name: 'Item 2'
          },{
            name: 'Unselectable Item 2',
            unselectable: true
          }
        ])

    @example
      @@html
        <button class="hx-btn hx-positive menuButtonNamed">hx-positive</button>
        <button class="hx-btn hx-negative menuButtonNamed">hx-negative</button>
        <button class="hx-btn hx-warning menuButtonNamed">hx-warning</button>
        <button class="hx-btn hx-info menuButtonNamed">hx-info</button>
        <button class="hx-btn hx-contrast menuButtonNamed">hx-contrast</button>
        <button class="hx-btn hx-compliment menuButtonNamed">hx-compliment</button>

      @@js
        menuItems = ["item 1","item 2","item 3"]
        menuExample = hx.selectAll('.menuButtonNamed').each(function(node){
          menu = new hx.Menu(node);
          menu.render(menuItems);
        });

    @example
      @@html
        <button class="hx-btn" id="collapsibleMenu">Menu with children</button>

      @@js
        menu = new hx.Menu('#collapsibleMenu');
        menu.renderer = function(element, item){
          hx.select(element).text(item.text || item)
        };
        menu.render([
          {
            text: 'Item 1',
            children: [
              'Sub item 1',
              'Sub item 2',
            ]
          },
          {
            text: 'Item 2',
            children: [
              'Sub item 1',
              'Sub item 2',
            ]
          }
        ])

@version 0.12.8
  @examples
    @example
      @@html
        <button id="menuDefault" class="hx-btn">Default</button>
        <button id="menuDisabled" class="hx-btn">Disabled menu items</button>
        <button id="menuNoSelect" class="hx-btn">Unselectable menu items</button>
        <button id="menuMixed" class="hx-btn">Mixed Items</button>

      @@js
        defaultMenu = new hx.Menu('#menuDefault')
        defaultMenu.items(["item 1","item 2","item 3"])

        var renderer = function(elem, item){
          hx.select(elem).text(item.name)
        }

        disabledMenu = new hx.Menu('#menuDisabled')
        disabledMenu.rendererÂ = renderer
        disabledMenu.items([
          {
            name: 'Disabled Item 1',
            disabled: true
          },{
            name: 'Disabled Item 2',
            disabled: true
          },{
            name: 'Disabled Item 3',
            disabled: true
          }
        ])

        unselectableMenu = new hx.Menu('#menuNoSelect')
        unselectableMenu.renderer = renderer
        unselectableMenu.items([
          {
            name: 'Unselectable Item 1',
            unselectable: true
          },{
            name: 'Unselectable Item 2',
            unselectable: true
          },{
            name: 'Unselectable Item 3',
            unselectable: true
          }
        ])

        mixedMenu = new hx.Menu('#menuMixed')
        mixedMenu.renderer = renderer
        mixedMenu.items([
          {
            name: 'Disabled Item 1',
            disabled: true
          },{
            name: 'Item 1'
          },{
            name: 'Disabled Item 2',
            disabled: true
          },{
            name: 'Unselectable Item 1',
            unselectable: true
          },{
            name: 'Item 2'
          },{
            name: 'Unselectable Item 2',
            unselectable: true
          }
        ])

    @example
      @@html
        <button class="hx-btn hx-positive menuButtonNamed">hx-positive</button>
        <button class="hx-btn hx-negative menuButtonNamed">hx-negative</button>
        <button class="hx-btn hx-warning menuButtonNamed">hx-warning</button>
        <button class="hx-btn hx-info menuButtonNamed">hx-info</button>
        <button class="hx-btn hx-contrast menuButtonNamed">hx-contrast</button>
        <button class="hx-btn hx-compliment menuButtonNamed">hx-compliment</button>

      @@js
        menuItems = ["item 1","item 2","item 3"]
        menuExample = hx.selectAll('.menuButtonNamed').each(function(node){
          menu = new hx.Menu(node);
          menu.items(menuItems);
        });

    @example
      @@html
        <button class="hx-btn" id="collapsibleMenu">Menu with children</button>

      @@js
        menu = new hx.Menu('#collapsibleMenu');
        menu.renderer(function(element, item){
          hx.select(element).text(item.text || item)
        });
        menu.items([
          {
            text: 'Item 1',
            children: [
              'Sub item 1',
              'Sub item 2',
            ]
          },
          {
            text: 'Item 2',
            children: [
              'Sub item 1',
              'Sub item 2',
            ]
          }
        ])

@version 0.13.0
  @examples
    @example
      @@html
        <button id="menuDefault" class="hx-btn">Default</button>
        <button id="menuDisabled" class="hx-btn">Disabled menu items</button>
        <button id="menuNoSelect" class="hx-btn">Unselectable menu items</button>
        <button id="menuMixed" class="hx-btn">Mixed Items</button>

      @@js
        defaultMenu = new hx.Menu('#menuDefault')
        defaultMenu.items(["item 1","item 2","item 3"])

        var renderer = function(elem, item){
          hx.select(elem).text(item.name)
        }

        disabledMenu = new hx.Menu('#menuDisabled')
        disabledMenu.renderer(renderer)
        disabledMenu.items([
          {
            name: 'Disabled Item 1',
            disabled: true
          },{
            name: 'Disabled Item 2',
            disabled: true
          },{
            name: 'Disabled Item 3',
            disabled: true
          }
        ])

        unselectableMenu = new hx.Menu('#menuNoSelect')
        unselectableMenu.renderer(renderer)
        unselectableMenu.items([
          {
            name: 'Unselectable Item 1',
            unselectable: true
          },{
            name: 'Unselectable Item 2',
            unselectable: true
          },{
            name: 'Unselectable Item 3',
            unselectable: true
          }
        ])

        mixedMenu = new hx.Menu('#menuMixed')
        mixedMenu.renderer(renderer)
        mixedMenu.items([
          {
            name: 'Disabled Item 1',
            disabled: true
          },{
            name: 'Item 1'
          },{
            name: 'Disabled Item 2',
            disabled: true
          },{
            name: 'Unselectable Item 1',
            unselectable: true
          },{
            name: 'Item 2'
          },{
            name: 'Unselectable Item 2',
            unselectable: true
          }
        ])

    @example
      @@html
        <button class="hx-btn hx-positive menuButtonNamed">hx-positive</button>
        <button class="hx-btn hx-negative menuButtonNamed">hx-negative</button>
        <button class="hx-btn hx-warning menuButtonNamed">hx-warning</button>
        <button class="hx-btn hx-info menuButtonNamed">hx-info</button>
        <button class="hx-btn hx-contrast menuButtonNamed">hx-contrast</button>
        <button class="hx-btn hx-compliment menuButtonNamed">hx-compliment</button>

      @@js
        menuItems = ["item 1","item 2","item 3"]
        menuExample = hx.selectAll('.menuButtonNamed').forEach(function(node){
          menu = new hx.Menu(node.node());
          menu.items(menuItems);
        });

    @example
      @@html
        <button class="hx-btn" id="collapsibleMenu">Menu with children</button>

      @@js
        menu = new hx.Menu('#collapsibleMenu', {
          renderer: function(element, item){
            hx.select(element).text(item.text || item)
          },
          items:[
            {
              text: 'Item 1',
              children: [
                'Sub item 1',
                'Sub item 2',
              ]
            },
            {
              text: 'Item 2',
              children: [
                'Sub item 1',
                'Sub item 2',
              ]
            }
          ]
        });

@version 1.0.0
  @examples
    @example
      @@html
        <button id="menuDefault" class="hx-btn">Default</button>
        <button id="menuDisabled" class="hx-btn">Disabled menu items</button>
        <button id="menuNoSelect" class="hx-btn">Unselectable menu items</button>
        <button id="menuMixed" class="hx-btn">Mixed Items</button>

      @@js
        defaultMenu = new hx.Menu('#menuDefault')
        defaultMenu.items(["item 1","item 2","item 3"])

        var renderer = function(elem, item){
          hx.select(elem).text(item.name)
        }

        disabledMenu = new hx.Menu('#menuDisabled')
        disabledMenu.renderer(renderer)
        disabledMenu.items([
          {
            name: 'Disabled Item 1',
            disabled: true
          },{
            name: 'Disabled Item 2',
            disabled: true
          },{
            name: 'Disabled Item 3',
            disabled: true
          }
        ])

        unselectableMenu = new hx.Menu('#menuNoSelect')
        unselectableMenu.renderer(renderer)
        unselectableMenu.items([
          {
            name: 'Unselectable Item 1',
            unselectable: true
          },{
            name: 'Unselectable Item 2',
            unselectable: true
          },{
            name: 'Unselectable Item 3',
            unselectable: true
          }
        ])

        mixedMenu = new hx.Menu('#menuMixed')
        mixedMenu.renderer(renderer)
        mixedMenu.items([
          {
            name: 'Disabled Item 1',
            disabled: true
          },{
            name: 'Item 1'
          },{
            name: 'Disabled Item 2',
            disabled: true
          },{
            name: 'Unselectable Item 1',
            unselectable: true
          },{
            name: 'Item 2'
          },{
            name: 'Unselectable Item 2',
            unselectable: true
          }
        ])

    @example
      @@html
        <button class="hx-btn hx-action menuButtonNamed">hx-action</button>
        <button class="hx-btn hx-positive menuButtonNamed">hx-positive</button>
        <button class="hx-btn hx-negative menuButtonNamed">hx-negative</button>
        <button class="hx-btn hx-warning menuButtonNamed">hx-warning</button>
        <button class="hx-btn hx-info menuButtonNamed">hx-info</button>
        <button class="hx-btn hx-contrast menuButtonNamed">hx-contrast</button>
        <button class="hx-btn hx-compliment menuButtonNamed">hx-compliment</button>

      @@js
        menuItems = ["item 1","item 2","item 3"]
        menuExample = hx.selectAll('.menuButtonNamed').forEach(function(node){
          menu = new hx.Menu(node.node());
          menu.items(menuItems);
        });

    @example
      @@html
        <button class="hx-btn" id="collapsibleMenu">Menu with children</button>

      @@js
        menu = new hx.Menu('#collapsibleMenu', {
          renderer: function(element, item){
            hx.select(element).text(item.text || item)
          },
          items:[
            {
              text: 'Item 1',
              children: [
                'Sub item 1',
                'Sub item 2',
              ]
            },
            {
              text: 'Item 2',
              children: [
                'Sub item 1',
                'Sub item 2',
              ]
            }
          ]
        });

@version 2.3.0
  @examples
    @example
      @@html
        <button id="menuDefault" class="hx-btn">Default</button>
        <button id="menuDisabled" class="hx-btn">Disabled menu items</button>
        <button id="menuNoSelect" class="hx-btn">Unselectable menu items</button>
        <button id="menuMixed" class="hx-btn">Mixed Items</button>

      @@js
        defaultMenu = new hx.Menu('#menuDefault')
        defaultMenu.items(["item 1","item 2","item 3"])

        disabledMenu = new hx.Menu('#menuDisabled')
        disabledMenu.items([
          {
            text: 'Disabled Item 1',
            disabled: true
          },{
            text: 'Disabled Item 2',
            disabled: true
          },{
            text: 'Disabled Item 3',
            disabled: true
          }
        ])

        unselectableMenu = new hx.Menu('#menuNoSelect')
        unselectableMenu.items([
          {
            text: 'Unselectable Item 1',
            unselectable: true
          },{
            text: 'Unselectable Item 2',
            unselectable: true
          },{
            text: 'Unselectable Item 3',
            unselectable: true
          }
        ])

        mixedMenu = new hx.Menu('#menuMixed')
        mixedMenu.items([
          {
            text: 'Disabled Item 1',
            disabled: true
          },{
            text: 'Item 1'
          },{
            text: 'Disabled Item 2',
            disabled: true
          },{
            text: 'Unselectable Item 1',
            unselectable: true
          },{
            text: 'Item 2'
          },{
            text: 'Unselectable Item 2',
            unselectable: true
          }
        ])

    @example
      @@html
        <button class="hx-btn hx-action menuButtonNamed">hx-action</button>
        <button class="hx-btn hx-positive menuButtonNamed">hx-positive</button>
        <button class="hx-btn hx-negative menuButtonNamed">hx-negative</button>
        <button class="hx-btn hx-warning menuButtonNamed">hx-warning</button>
        <button class="hx-btn hx-info menuButtonNamed">hx-info</button>
        <button class="hx-btn hx-contrast menuButtonNamed">hx-contrast</button>
        <button class="hx-btn hx-compliment menuButtonNamed">hx-compliment</button>

      @@js
        menuItems = ["item 1","item 2","item 3"]
        menuExample = hx.selectAll('.menuButtonNamed').forEach(function(node){
          menu = new hx.Menu(node.node());
          menu.items(menuItems);
        });

    @example
      @@html
        <button class="hx-btn" id="collapsibleMenu">Menu with children</button>
        <button class="hx-btn" id="collapsibleMenu-feature-flag">Menu with children (feature flag)</button>

      @@js
        menu = new hx.Menu('#collapsibleMenu', {
          items:[
            {
              text: 'Item 1',
              children: [
                'Sub item 1',
                'Sub item 2',
              ]
            },
            {
              text: 'Item 2',
              children: [
                'Sub item 1',
                'Sub item 2',
              ]
            }
          ]
        });

        menu = new hx.Menu('#collapsibleMenu-feature-flag', {
          featureFlags: {
            useUpdatedStructure: true,
          },
          items:[
            {
              text: 'Item 1',
              children: [
                'Sub item 1',
                'Sub item 2',
              ]
            },
            {
              text: 'Item 2',
              children: [
                'Sub item 1',
                'Sub item 2',
              ]
            }
          ]
        });

