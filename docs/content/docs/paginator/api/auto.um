@define setterGetter
  @method {{ps}}
    @added 1.19.0
      @description
        Added setter getter methods for all options

    @description: Sets the {{ps}} for this paginator

    @arg {{ps}} [{{cs}}]
      @description
        The value to set

    @returns [Paginator]
      @description
        this paginator

  @method {{ps}}
    @added 1.19.0
      @description
        Added setter getter methods for all options

    @description: Gets the {{ps}} for this paginator

    @returns [{{cs}}]
      @description
        The {{ps}} for this paginator


@prototype hx.Paginator
  @updated 0.11.0
    @description
      Added resize listener to make paginators re-render when the container is resized.

  @updated 0.11.0
    @description
      Updated the paginator so that it detects the size of its container and changes the number of visible buttons accordingly. Also changed it so that the button widths resize depending on their character length to prevent paginators wrapping onto multiple lines.

  @updated 1.19.0
    @description
      In preparation for version 2, new visuals have been added behind feature flags to improve the UI, UX and accessibility of the paginator component.

  @description
    Component for selecting a page from a range.

  @extends EventEmitter
  @constructor
    @removed 1.0.0
      @description
        Use @code[hx.Paginator(selector, options)]

    @description
      Sets up a paginator.

    @arg selection [String/HTMLElement]
      @description
        A CSS selector or a HTMLElement that identifies the container for your paginator.


  @constructor
    @added 1.0.0
    @description
      Sets up a paginator.

    @arg selector [String/HTMLElement]
      @description
        A CSS selector or a HTMLElement that identifies the container for your paginator.

    @arg? options [Object]
      @property page [Number]
        @description
          The page index to set. This index is 1 based.

        @default
          1

      @property visibleCount [Number]
        @deprecated 1.19.0
          @description
            The visibleCount will be replaced in version 2 with the @code[padding] option.
        @description
          The number of pages visible in the paginator.
        @default
          10

      @property pageCount [Number]
        @description
          The number of pages to give the paginator.
        @default
          10

      @property updatePageOnSelect [Boolean]
        @added 1.19.0
        @description
          Whether to update the current @code[page] when updating the paginator value. Set to false when wrapping with
          another component that should control the currently active page.
        @default: true

      @property paginatorAria [String]
        @added 1.19.0
        @description
          The text to use for the @code[aria-label] on the container to enable screen readers to navigate using the paginator
        @default: @code[hx.userFacingText('paginator', 'paginatorAria')]

      @property currentPageAria [String]
        @added 1.19.0
        @description
          The text to use for the @code[aria-label] on the current page to enable screen readers to navigate using the paginator

          This string can contain @code[$page] which will be replaced by the paginator when rendering (e.g. @code['XXX $page XXX'] would be converted to @code['XXX 4 XXX'])
        @default: @code[hx.userFacingText('paginator', 'currentPageAria')]

      @property gotoPageAria [String]
        @added 1.19.0
        @description
          The text to use for the @code[aria-label] on the numeric page buttons to enable screen readers to navigate using the paginator

          This string can contain @code[$page] which will be replaced by the paginator when rendering (e.g. @code['XXX $page XXX'] would be converted to @code['XXX 4 XXX'])
        @default: @code[hx.userFacingText('paginator', 'gotoPageAria')]

      @property prevPageAria [String]
        @added 1.19.0
        @description
          The text to use for the @code[aria-label] on the previous page button to enable screen readers to navigate using the paginator

          This string can contain @code[$page] which will be replaced by the paginator when rendering (e.g. @code['XXX $page XXX'] would be converted to @code['XXX 4 XXX'])
        @default: @code[hx.userFacingText('paginator', 'prevPageAria')]

      @property nextPageAria [String]
        @added 1.19.0
        @description
          The text to use for the @code[aria-label] on the next page button to enable screen readers to navigate using the paginator

          This string can contain @code[$page] which will be replaced by the paginator when rendering (e.g. @code['XXX $page XXX'] would be converted to @code['XXX 4 XXX'])
        @default: @code[hx.userFacingText('paginator', 'nextPageAria')]

      @property prevText [String]
        @added 1.19.0
        @description
          The text to display in the previous button
        @default: @code[hx.userFacingText('paginator', 'prev')]

      @property nextText [String]
        @added 1.19.0
        @description
          The text to display in the next button
        @default: @code[hx.userFacingText('paginator', 'next')]

      @property v2Features [Object]
        @added 1.19.0

        @property useAccessibleRendering [Boolean]
          @description
            Whether to use a more accessible HTML structure to allow screen readers to use the Paginator correctly.

            This will be the default behaviour in version 2.0.0

          @default: false


        @property padding [Number]
          @description
            The padding to display either side of the 'active' page when using accessible rendering.

            The recommended value is 2 however there are some cases where it is more useful to make a larger selection of pages available

            This will be converted to a standard option in version 2.0.0

          @default: 2


        @property showCentered [Boolean]
          @description
            Whether to align the paginator centrally in the container

          @default: @code[false]



  @method setPage
    @deprecated 0.11.0
      @description
        Use @code[page(index)] instead.

    @removed 0.12.0
    @description
      Sets the currently selected page. Uses 1 based indexing.

    @arg index [Number]
      @description
        The page index to set. This index is 1 based.

    @returns [Paginator]
      @description
        this paginator

  @method getPage
    @deprecated 0.11.0
      @description
        Use @code[page()] instead.

    @removed 0.12.0
    @description
      Gets the currently selected page index.

    @returns [Number]
      @description
        The 1-based index of the currently selected page.

  @method setPageCount
    @deprecated 0.13.0
      @description
        Use @code[pageCount(value)] instead

    @removed 0.14.0
      @description
        Use @code[pageCount(value)] instead

    @description
      Sets the total number of pages in the paginator.

    @arg count [Number]
      @description
        The number of pages to give the paginator.

    @returns [Paginator]
      @description
        this paginator

  @method setVisibleCount
    @deprecated 0.13.0
      @description
        Use @code[visibleCount(value)] instead

    @removed 0.14.0
      @description
        Use @code[visibleCount(value)] instead

    @description
      Sets the number of pages that are shown at once.

    @arg count [Number]
      @description
        The number of pages visible in the paginator.

      @default
        10

    @returns [Paginator]
      @description
        this paginator

  @method page
    @added 0.11.0
    @description
      Sets the currently selected page. Uses 1 based indexing.

    @arg index [Number]
      @description
        The page index to set. This index is 1 based.

    @returns [Paginator]
      @description
        this paginator

  @method page
    @added 0.11.0
    @description
      Gets the currently selected page index.

    @returns [Number]
      @description
        The 1-based index of the currently selected page.

  @method pageCount
    @added 0.13.0
    @description
      Sets the total number of pages in the paginator.

    @arg count [Number]
      @description
        The number of pages to give the paginator.

    @returns [Paginator]
      @description
        this paginator

  @method pageCount
    @added 0.13.0
    @description
      Gets the total number of pages in the paginator.

    @returns [Number]
      @description
        The current page count for the paginator

  @setterGetter updatePageOnSelect: Boolean
  @setterGetter paginatorAria: String
  @setterGetter currentPageAria: String
  @setterGetter gotoPageAria: String
  @setterGetter prevPageAria: String
  @setterGetter nextPageAria: String
  @setterGetter prevText: String
  @setterGetter nextText: String

  @method visibleCount
    @added 0.13.0

    @deprecated 1.19.0
      @description
        The visibleCount will be replaced in version 2 with the @code[padding] option.

    @description
      Sets the number of pages that are shown at once.

    @arg count [Number]
      @description
        The number of pages visible in the paginator.

      @default
        10

    @returns [Paginator]
      @description
        this paginator

  @method visibleCount
    @added 0.13.0

    @deprecated 1.19.0
      @description
        The visibleCount will be replaced in version 2 with the @code[padding] option.

    @description
      Gets the number of pages that are shown at once.

    @returns [Number]
      @description
        The current visible count for the paginator


  @event change [Object]
    @description
      Emitted when the selected page is changed.

    @property cause [String]
      @description
        Will be either 'user' or 'api'. 'user' means that the user clicked on the paginator to cause the page to change, 'api' means that one of the methods on the paginator (such as setPage) was called to cause the change.

    @property selected [Number]
      @deprecated 1.19.0
        @description
          This has been renamed to @code[value] for consitency with other Hexagon events. This property will be removed in version 2.0.0

      @description
        The selected page (1 based index).

    @property value [Number]
      @added 1.19.0

      @description
        The selected page (1 based index).


@function hx.paginator
  @added 1.0.0
    @description
      Fluid api version of Paginator

  @description
    Creates a new Paginator set up on a detached element, wrapped in a selection

  @arg? options [Object]
    @description
      See the options object for constructing Paginator

  @returns [Selection]
    @description
      A selection containing an element with an Paginator initialised on it

