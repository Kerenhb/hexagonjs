@version 0.11.0

  @api Plot

    @prototype LineSeries
      @extends EventEmitter
      @enhancement: Gradient stroke and fill is now possible (by using an array for the color properties)
        @issue 342

      @property feather [Number]
        @updated: series.feather can now be set to false to disable feathering
        @description: The maximum number of points in the curve drawn. This is used to reduce the number of points in the svg curve for the series. This property can be set to false to disable feathering. The default is 200.

      @property color [Array[String]]
        A css string color to stroke the path line with.

        To color the line with a gradient, this may be set to an array:

        @codeblock
          series.series.color = [
            {
              yValue: 0,
              color: hx.theme.plot.negativeCol
            },
            {
              yValue: 90,
              color: '#555'
            },
            {
              yValue: 110,
              color: '#555'
            },
            {
              yValue: 200,
              color: hx.theme.plot.negativeCol
            }
          ]

        The colors will be linearly interpolated vertically between the y values.

      @property class [String]
        @description: An optional additional class (or list of space separated classes) to give the series. This can be used to change the styles for a series, for example by making a line series dashed.

      @method on
        @description: Register a function that should be called every time an event of the given name happens.
        @param name [String]: The event type to listen out for
        @param callback [Function]
          @description: The function to call when an event occurs.
          @param data [Any]: The data sent along with the event (if any)

        @added: Added an on click listener to series.
          @issue 229

        @event click
          @description: The event emitted when a series is clicked.
          @data Object
            @property event: The click event data.
            @property data: The data of the point on the line that was clicked.
            @property series: The selected series.
        @returns LineSeries: This LineSeries

      @method createLabelValues [Function]
        @description: Creates the list of values to show in the hover-over labels. The default is that the x and y values will be returned.
        @param dataPoint [Object]
          @property x [Number]: The x value of the data point
          @property y [Number]: The y value of the data point
        @returns [Array[Object]]: An array of objects that describe the label values. They should each contain a name, value and formatter property:
          @property name [String]
          @property value [Number]
          @property formatter [Function]
            @param input [Number]
            @returns String: The formatted number.

    @prototype BandSeries
      @extends EventEmitter
      @bugfix: Fixed issue where existing band series weren't being cleared when a graph was re-renderered.
        @issue 406

      @enhancement: Gradient fill is now possible (by using an array for the color property)
        @issue 342

      @property feather [Number]
        @updated: series.feather can now be set to false to disable feathering
        @description: The maximum number of points in the curve drawn. This is used to reduce the number of points in the svg curve for the series. This property can be set to false to disable feathering. The default is 200.

      @property color [String/Array]
        A css string color to stroke the path line with.

        To color the line with a gradient, this may be set to an array:

        @codeblock
          series.series.color = [
            {
              yValue: 0,
              color: hx.theme.plot.negativeCol
            },
            {
              yValue: 90,
              color: '#555'
            },
            {
              yValue: 110,
              color: '#555'
            },
            {
              yValue: 200,
              color: hx.theme.plot.negativeCol
            }
          ]

        The colors will be linearly interpolated vertically between the y values.

      @property class [String]
        @description: An optional additional class (or list of space separated classes) to give the series. This can be used to change the styles for a series.

      @method on
        @description: Register a function that should be called every time an event of the given name happens.
        @param name [String]: The event type to listen out for
        @param callback [Function]
          @description: The function to call when an event occurs.
          @param data [Any]: The data sent along with the event (if any)

        @added: Added an on click listener to series.
          @issue 229

        @event click
          @description: The event emitted when a series is clicked.
          @data Object
            @property event: The click event data.
            @property data: The data of the point on the band that was clicked.
            @property series: The selected series.
        @returns BandSeries: This BandSeries

      @method createLabelValues [Function]
        @description: Creates the list of values to show in the hover-over labels. The default is that the x and y values will be returned.
        @param dataPoint [Object]
          @property x [Number]: The x value of the data point
          @property y1 [Number]: The top value of the data point band
          @property y2 [Number]: The bottom value of the data point band
        @param yValueAccessor [Function]
          @description: Extracts the appropriate y value from the data point - depending on the mouse position.
          @param dataPoint [Object]
          @returns Number: The extracted y value.
        @returns [Array[Object]]: An array of objects that describe the label values. They should each contain a name, value and formatter property:
          @property name [String]
          @property value [Number]
          @property formatter [Function]
            @param input [Number]
            @returns String: The formatted number.

    @prototype BarSeries
      @extends EventEmitter
      @property class [String]
        @description: An optional additional class (or list of space separated classes) to give the series. This can be used to change the styles for a series.

      @method on
        @description: Register a function that should be called every time an event of the given name happens.
        @param name [String]: The event type to listen out for
        @param callback [Function]
          @description: The function to call when an event occurs.
          @param data [Any]: The data sent along with the event (if any)

        @added: Added an on click listener to series.
          @issue 229

        @event click
          @description: The event emitted when a series is clicked.
          @data Object
            @property event: The click event data.
            @property data: The data of the bar that was clicked.
            @property series: The selected series.
        @returns BarSeries: This BarSeries

    @prototype ScatterSeries
      @extends EventEmitter
      @property class [String]
        @description: An optional additional class (or list of space separated classes) to give the series. This can be used to change the styles for the data points.

      @method on
        @description: Register a function that should be called every time an event of the given name happens.
        @param name [String]: The event type to listen out for
        @param callback [Function]
          @description: The function to call when an event occurs.
          @param data [Any]: The data sent along with the event (if any)

        @added: Added an on click listener to series.
          @issue 229

        @event click
          @description: The event emitted when a series is clicked.
          @data Object
            @property event: The click event data.
            @property data: The data of the point on the graph that was clicked.
            @property series: The selected series.

        @returns ScatterSeries: This ScatterSeries

      @method createLabelValues [Function]
        @description: Creates the list of values to show in the hover-over labels. The default is that the x and y values will be returned.
        @param dataPoint [Object]
          @property x [Number]: The x value of the data point
          @property y [Number]: The y value of the data point
        @returns [Array[Object]]: An array of objects that describe the label values. They should each contain a name, value and formatter property:
          @property name [String]
          @property value [Number]
          @property formatter [Function]
            @param input [Number]
            @returns String: The formatted number.

    @prototype StraightLineSeries
      @extends EventEmitter
      @property class [String]
        @description: An optional additional class (or list of space separated classes) to give the series. This can be used to change the styles for a series, for example by making a line series dashed.

      @method on
        @description: Register a function that should be called every time an event of the given name happens.
        @param name [String]: The event type to listen out for
        @param callback [Function]
          @description: The function to call when an event occurs.
          @param data [Any]: The data sent along with the event (if any)

        @added: Added an on click listener to series.
          @issue 229

        @event click
          @description: The event emitted when a series is clicked.
          @data Object
            @property event: The click event data.
            @property data: The data of the point on the line that was clicked.
            @property series: The selected series.

        @returns StraightLineSeries: This StraightLineSeries

      @method createLabelValues [Function]
        @description: Creates the list of values to show in the hover-over labels. The default is that the x and y values will be returned.
        @param dataPoint [Object]
          @property x [Number]: The x value of the data point
          @property y [Number]: The y value of the data point
        @returns [Array[Object]]: An array of objects that describe the label values. They should each contain a name, value and formatter property:
          @property name [String]
          @property value [Number]
          @property formatter [Function]
            @param input [Number]
            @returns String: The formatted number.

    @prototype hx.Graph
      @extends EventEmitter
      @enhancement: Added resize listener to make graphs re-render when the container is resized.
        @issue 53

      @added: Added the ability to set a global zoom for all axes at once with the zoomStart and zoomEnd properties. Zooming with the mouse wheel can be enabled by setting the useZoom property to true.
        @issue 117

      @method on
        @description: Register a function that should be called every time an event of the given name happens.
        @param name [String]: The event type to listen out for
        @param callback [Function]
          @description: The function to call when an event occurs.
          @param data [Any]: The data sent along with the event (if any)

        @added: Added an on click listener to graphs as an alternative method of accessing the series on click.
          @issue 229

        @event click
          @description: The event emitted when a series is clicked.
          @data Object
            @property event: The click event data.
            @property data: The data of the point or element that was clicked.
            @property series: The selected series.
        @returns Graph: This Graph

      @property useZoom [Boolean]
        @description: Whether or not to enable zoom controls for the graph
        @default false

      @property zoomStart [Number]
        @description: The start or the zoomed region - specified on the 0 to 1 scale.
        @default 0

      @property zoomEnd [Number]
        @description: The end or the zoomed region - specified on the 0 to 1 scale.
        @default 1

      @property useLabels [Boolean]
        @description: Whether or not to display labels on hover
        @default true

      @property useLegend [Boolean]
        @description: Whether or not to display the legend
        @default false

      @property legendPosition [String]
        @description
          How to display the legend on the graph. Possible modes:

          @list
            'auto' - moves the legend around to avoid the mouse
            'hover' - same as auto, but only displays the legend on mouse hover
            'top-right' - displays the legend in the top right
            'top-left' - displays the legend in the top left
            'bottom-right' - displays the legend in the bottom right
            'bottom-left' - displays the legend in the bottom left

        @default auto

    @prototype hx.PieChart
      @enhancement: Added resize listener to make pie charts re-render when the container is resized.
        @issue 53
      @bugfix: Updated the pie chart labels to help prevent them flowing outside the bounding box of the svg.
        @issue 330

      @method on
        @description: Register a function that should be called every time an event of the given name happens.
        @param name [String]: The event type to listen out for
        @param callback [Function]
          @description: The function to call when an event occurs.
          @param data [Any]: The data sent along with the event (if any)

        @added: Added an on click listener to pie charts.
          @issue 229

        @event click
          @description: The event emitted when the pie chart is clicked.
          @data Object
            @property event: The click event data.
            @property data: The data of the segment that was clicked.
            @property series: The series data for the pie chart or pie chart ring.

        @returns PieChart: This PieChart

      @method createLabelValues [Function]
        @description: Creates the list of values to show in the hover-over labels. The default is that the x and y values will be returned.
        @param segment [Object]: An object containing information for the segment being hovered over
        @param ring [Object]
          @description: An object containing information for the ring that is being hovered over
        @returns [Array[Object]]: An array of objects that describe the label values. They should each contain a name, value and formatter property:
          @property name [String]
          @property value [Number]
          @property formatter [Function]
            @param input [Number]
            @returns String: The formatted number.

      @property useLabels [Boolean]
        @description: Whether or not to display labels on hover
        @default true

      @property useSegmentText [Boolean]
        @description: Whether or not to display text on each segment. If this is enabled, it is recommended that useLabels is disabled.
        @default false

      @property segmentTextFormatter [Function]
        @description: Returns the text that should be displayed on a segment if useSegmentText is enabled.
        @param segment [Object]: The segment to return text for
        @param segments [Array[Object]]: The array of all segments in the ring
        @returns String: The formatted text.

      @property useLegend [Boolean]
        @description: Whether or not to display the legend
        @default false

      @property legendPosition [String]
        @description
          How to display the legend on the graph. Possible modes:

          @list
            'auto' - moves the legend around to avoid the mouse
            'hover' - same as auto, but only displays the legend on mouse hover
            'top-right' - displays the legend in the top right
            'top-left' - displays the legend in the top left
            'bottom-right' - displays the legend in the bottom right
            'bottom-left' - displays the legend in the bottom left

        @default auto

    @function hx.plot
      @description: Provides a function for declaring graphs as an object, as alternative to the builder pattern use by the rest of the plot api.
      @param selector [String/HTMLElement]: A css selector or HTMLElement that uniquely identifies the container within the page.
      @param description [Object]
        @property type [String]:
          Can currently be either 'pie' or 'graph'.
          @default graph

        @property? segmentPadding [Number]: To be used when constructing pie charts. See the pie chart api for details.
        @property? innerPadding [Number]: To be used when constructing pie charts. See the pie chart api for details.
        @property? ringPadding [Number]: To be used when constructing pie charts. See the pie chart api for details.
        @property? totalAngle [Number]: To be used when constructing pie charts. See the pie chart api for details.
        @property? startAngle [Number]: To be used when constructing pie charts. See the pie chart api for details.
        @property? color [Number]: To be used when constructing pie charts. See the pie chart api for details.
        @property? label [Number]: To be used when constructing pie charts. See the pie chart api for details.
        @property? formatter [Function]: To be used when constructing pie charts. See the pie chart api for details.
        @property? series [Object/Array[Object]]: To be used when constructing pie charts. See the setData method on the PieChart prototype for details.

        @property? axes [Array[Object]]: To be used when constructing graphs.
          @property? xVisible [Number]: See the Axis api for details.
          @property? xFormatter [Function]: See the Axis api for details.
          @property? xTickRotation [Number]: See the Axis api for details.
          @property? xMin [Number]: See the Axis api for details.
          @property? xMax [Number]: See the Axis api for details.
          @property? xDiscretePadding [Number]: See the Axis api for details.
          @property? xDiscreteLabels [Array[String]]: See the Axis api for details.
          @property? xTickSpacing [Number]: See the Axis api for details.
          @property? xTitle [String]: See the Axis api for details.
          @property? xScalePaddingMin [Number]: See the Axis api for details.
          @property? xScalePaddingMax [Number]: See the Axis api for details.
          @property? xTicksAll [Boolean]: See the Axis api for details.
          @property? xGridLines [Boolean]: See the Axis api for details.
          @property? xNthTickVisible [Number]: See the Axis api for details.
          @property? yVisible [Number]: See the Axis api for details.
          @property? yFormatter [Function]: See the Axis api for details.
          @property? yTickRotation [Number]: See the Axis api for details.
          @property? yMin [Number]: See the Axis api for details.
          @property? yMax [Number]: See the Axis api for details.
          @property? yDiscretePadding [Number]: See the Axis api for details.
          @property? yDiscreteLabels [Array[String]]: See the Axis api for details.
          @property? yTickSpacing [Number]: See the Axis api for details.
          @property? yTitle [String]: See the Axis api for details.
          @property? yScalePaddingMin [Number]: See the Axis api for details.
          @property? yScalePaddingMax [Number]: See the Axis api for details.
          @property? yTicksAll [Boolean]: See the Axis api for details.
          @property? yGridLines [Boolean]: See the Axis api for details.
          @property? yNthTickVisible [Number]: See the Axis api for details.

          @property? series [Array[Object]]
            @property? class [String]: See the various Series prototypes for details.
            @property? stroke [Boolean]: See the various Series prototypes for details.
            @property? color [String]: See the various Series prototypes for details.
            @property? fill [Boolean]: See the various Series prototypes for details.
            @property? fillColor [String]: See the various Series prototypes for details.
            @property? feather [Number]: See the various Series prototypes for details.
            @property? markers [Boolean]: See the various Series prototypes for details.
            @property? markerRadius [Number]: See the various Series prototypes for details.
            @property? markerColor [String]: See the various Series prototypes for details.
            @property? group [String]: See the various Series prototypes for details.
            @property? size [Number]: See the various Series prototypes for details.

