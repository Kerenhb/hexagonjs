@version 0.9.0

  @description
    A component for selecting colors.

  @examples
    @example
      @html
        <button class="hx-btn" id="basicPickerButton">Button</button>
      @js
        var pickerBasic = new hx.ColorPicker("#basicPickerButton")

    @example
      @html
        <button class="hx-btn" id="colorPickerButton">Button</button>
      @js
        var pickerColor = new hx.ColorPicker("#colorPickerButton","#C40030")

    @example
      @html
        <button class="hx-btn" id="inputPickerButton">Button</button>
      @js
        var pickerBasic = new hx.ColorPicker("#inputPickerButton",null,1)

    @example
      @html
        <button class="hx-btn" id="eventsPickerButton">Button</button>
        <input id="eventsInputL"/>
        <input id="eventsInputR" />
      @js
        // Update an input box to set the background and text color and display the hex color value in the box.
        var updateBox = function(box, col){
          var elem = hx.select(box)
          elem.value(col.toString().toUpperCase());
          elem.style("background", col.toString());
          elem.style("color", col.getTextCol());
        }

        var pickerEvents = new hx.ColorPicker("#eventsPickerButton",null,1)

        // Set the initial values of the inputs
        updateBox("#eventsInputL", pickerEvents.currentColor);
        updateBox("#eventsInputR", pickerEvents.currentColor);

        // Add listener for when the currentColor changes.
        pickerEvents.on("change", function(col){
          updateBox("#eventsInputL", col);
        });

        // Add listener for when the color has stopped changing (the user has stopped dragging the controls)
        pickerEvents.on("changeend", function(col){
          updateBox("#eventsInputR", col);
        });

  @api Color Picker
    @prototype hx.ColorPicker
      @extends EventEmitter
      @description: The ColorPicker class can be used to allow a user to select a color with a visual representation.
      @constructor
        @param selector [String]: The selector to show the color picker for.
        @param? startColor [Color]: The start color to use when creating the color picker.
          @default #000000
        @param? showInputs [Boolean]: Boolean to decide whether or not to show the input boxes for the hex, red, green, blue, hue, saturation and lightness values.
          @default false
        @param? align [String]: The alignment of the dropdown (options can be found in the dropdown documentation)
          @default lblt

      @property currentColor [Color]
        @description: The color the picker is currently set to. When building a picker without a color defined, the value is set to '#000000'.

      @property showInputs [Boolean]
        @description: This value determines whether the color picker will show the input boxes as well as the picker.

      @method on
        @description: Register a function that should be called every time an event of the given name happens.
        @param name [String]: The event type to listen out for
        @param callback [Function]
          @description: The function to call when an event occurs.
          @param data [Any]: The data sent along with the event (if any)

        @event change: Emitted when the dropdown is opened, whilst the color is changed and when the color has finished changing.
          @data [Color]: The current color of the color picker.
        @event changeend: Emitted when the color has finished being changed (either by the visual method or by the input boxes).
          @data [Color]: The current color of the color picker.
        @returns ColorPicker: This ColorPicker

  @theme

  @seeAlso
