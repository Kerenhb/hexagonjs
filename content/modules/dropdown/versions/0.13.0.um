@version 0.13.0
  @api Dropdown
    @prototype hx.Dropdown
      @constructor
        @param selector [String/HTMLElement]
        @param dropdownContent [String/Function]
          @param node [HTMLElement]
        @param? mode [String]
        @param? align [String]
        @param? spacing [Number]
        @param? matchWidth [Boolean]
        @param? ddClass [String]
        @deprecated

          Use @code[hx.Dropdown(selector, dropdownContent, options)] instead.

      @constructor
        @added

        @param selector [String/HTMLElement]: The element the user has to click or hover over to show the dropdown
        @param dropdownContent [String/Function]
          @description
            The content to fill the dropdown with. It can be either a html string or a function that is passed the dropdown node. An example string content could be:
            @codeblock js
              ddContent = '<div>Some content</div>';
          @param node [HTMLElement]: The dropdown node to populate.
        @param? options [Object]: The options to use for the dropdown.
          @property mode [String]: The type of action that will show the dropdown, can be 'click' or 'hover' (the hover value will act as click for mobile devices without the hover event)
            @default 'click'
          @property align [String]
            @description
              The alignment value for the dropdown. The complete list of all alignment properties that should be used can be seen below:
              @list
                'up'
                'down'
                'left'
                'right'
                'lblt'
                'lbrt'
                'lbrb'
                'ltlb'
                'ltrt'
                'ltrb'
                'rblt'
                'rblb'
                'rbrt'
                'rtlt'
                'rtlb'
                'rtrb'
              Aside from 'up', 'down', 'left' and 'right', the other values use the first two characters to select a corner from the selection and the second two characters to select a corner from the dropdown and then align those corners so they are closest to each other.
            @default 'lblt'
          @property spacing [Number]: How much space to show between the dropdown and the selector
            @default theme.spacing
          @property matchWidth [Boolean]: If set to true, the dropdown width will always be the same as or greater than the width of the selector
            @default true
          @property ddClass [String]: An additional class to add to the dropdown when creating it.

      @method on
        @param name [String]
        @param callback [Function]
          @param data [Any]

        @event showstart
          @description: Emitted when the dropdown animation starts. No data is sent with this event.

        @event showend
          @description: Emitted when the dropdown animation finishes. No data is sent with this event.

        @event hidestart
          @description: Emitted when the dropdown animation starts. No data is sent with this event.

        @event hideend
          @description: Emitted when the dropdown animation ends. No data is sent with this event.

        @event hide
          @deprecated
            Use @code[hidestart] instead.


        @event show
          @deprecated
            Use @code[showstart] instead.


        @returns Dropdown: This Dropdown

      @property dropdownContent [String/Function]
        @param node [HTMLElement]: The dropdown node to populate.
        @removed
          dropdownContent has been moved to the options object

      @property spacing [Number]
        @removed
          spacing has been moved to the options object

      @property matchWidth [Boolean]
        @removed
          matchWidth has been moved to the options object

      @property ddClass [String]
        @removed
          ddClass has been moved to the options object

      @property options [Object]
        @property dropdownContent [String/Function]
          @description
            The content to fill the dropdown with. It can be either a html string or a function that is passed the dropdown node. 
            An example string content could be
            @codeblock js
              ddContent = '<div>Some content</div>';
          @param node [HTMLElement]: The dropdown node to populate.

        @property spacing [Number]
          @description: How much space to show between the dropdown and the selector

        @property matchWidth [Boolean]
          @description: If set to true, the dropdown width will always be the same as or greater than the width of the selector

        @property ddClass [String]
          @description: An additional class to add to the dropdown when creating it.

      @method cleanUp
        @returns Dropdown: This Dropdown

      @method hide
        @removed

      @method show
        @removed

      @method toggle
        @removed

      @method toggle
        @description: Toggles the visibility of the dropdown.
        @param? callback [Function]
          @description: Called when the animation finishes.
        @returns Dropdown: This Dropdown

      @method show
        @description: Shows the dropdown
        @param? callback [Function]
          @description: Called when the animation finishes.
        @returns Dropdown: This Dropdown

      @method hide
        @description: Hides the dropdown
        @param? callback [Function]
          @description: Called when the animation finishes.
        @returns Dropdown: This Dropdown