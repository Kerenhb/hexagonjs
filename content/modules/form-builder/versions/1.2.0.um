@version 1.2.0
  @api Form Builder
    @prototype hx.Form
      @bugfix: Updated the hidden/disabled state for properties so they can be hidden/disabled when added using the options and also using the hidden/disabled methods after they have been added.

      @method disabled
        @description: A method for getting the disabled state of a property in a form.
        @param property [String]: The property/key to use.
        @returns Boolean: The disabled state of the property. If the property does not exist, returns undefined.

      @method disabled
        @description: A method for getting the disabled state for an array of properties in a form.
        @param properties [Array[String]]: The array of properties/keys to use.
        @returns [Array[Boolean]]: An array indicating the disabled state of each property in the array of properties. If a property does not exist, it's value will be undefined.

      @method disabled
        @description: A method for setting the disabled state for a property in a form.
        @param property [String]: The property/key to use.
        @param disabled [Boolean]
        @returns Form: The current form

      @method disabled
        @description: A method for setting the disabled state for an array of properties in a form.
        @param properties [Array[String]]: The array of properties/keys to use.
        @param disabled [Boolean]
        @returns Form: The current form

      @group Add Component Methods
        @method addCheckbox
          @param name [String]
          @param? options [Object]
            @property disabled [Boolean]: Whether the property should be disabled as it's initial state. This can also be toggled with the @code(js)[disabled(property, disabled)] method.
              @default false
            @property hidden [Boolean]: Whether the property should be hidden as it's initial state. This can also be toggled with the @code(js)[hidden(property, hidden)] method.
              @default false

        @method addDatePicker
          @param name [String]
          @param? options [Object]
            @property disabled [Boolean]: Whether the property should be disabled as it's initial state. This can also be toggled with the @code(js)[disabled(property, disabled)] method.
              @default false
            @property hidden [Boolean]: Whether the property should be hidden as it's initial state. This can also be toggled with the @code(js)[hidden(property, hidden)] method.
              @default false

        @method addDateTimePicker
          @param name [String]
          @param? options [Object]
            @property disabled [Boolean]: Whether the property should be disabled as it's initial state. This can also be toggled with the @code(js)[disabled(property, disabled)] method.
              @default false
            @property hidden [Boolean]: Whether the property should be hidden as it's initial state. This can also be toggled with the @code(js)[hidden(property, hidden)] method.
              @default false

        @method addEmail
          @param name [String]
          @param? options [Object]
            @property disabled [Boolean]: Whether the property should be disabled as it's initial state. This can also be toggled with the @code(js)[disabled(property, disabled)] method.
              @default false
            @property hidden [Boolean]: Whether the property should be hidden as it's initial state. This can also be toggled with the @code(js)[hidden(property, hidden)] method.
              @default false

        @method addNumber
          @param name [String]
          @param? options [Object]
            @property disabled [Boolean]: Whether the property should be disabled as it's initial state. This can also be toggled with the @code(js)[disabled(property, disabled)] method.
              @default false
            @property hidden [Boolean]: Whether the property should be hidden as it's initial state. This can also be toggled with the @code(js)[hidden(property, hidden)] method.
              @default false

        @method addPassword
          @param name [String]
          @param? options [Object]
            @property disabled [Boolean]: Whether the property should be disabled as it's initial state. This can also be toggled with the @code(js)[disabled(property, disabled)] method.
              @default false
            @property hidden [Boolean]: Whether the property should be hidden as it's initial state. This can also be toggled with the @code(js)[hidden(property, hidden)] method.
              @default false

        @method addPicker
          @param name [String]
          @param values [Array[String/Object]]
          @param? options [Object]
            @property disabled [Boolean]: Whether the property should be disabled as it's initial state. This can also be toggled with the @code(js)[disabled(property, disabled)] method.
              @default false
            @property hidden [Boolean]: Whether the property should be hidden as it's initial state. This can also be toggled with the @code(js)[hidden(property, hidden)] method.
              @default false

        @method addRadio
          @param name [String]
          @param values [Array[String]]
          @param? options [Object]
            @property disabled [Boolean]: Whether the property should be disabled as it's initial state. This can also be toggled with the @code(js)[disabled(property, disabled)] method.
              @default false
            @property hidden [Boolean]: Whether the property should be hidden as it's initial state. This can also be toggled with the @code(js)[hidden(property, hidden)] method.
              @default false

        @method addTagInput
          @param name [String]
          @param? options [Object]
            @property disabled [Boolean]: Whether the property should be disabled as it's initial state. This can also be toggled with the @code(js)[disabled(property, disabled)] method.
              @default false
            @property hidden [Boolean]: Whether the property should be hidden as it's initial state. This can also be toggled with the @code(js)[hidden(property, hidden)] method.
              @default false

        @method addText
          @param name [String]
          @param? options [Object]
            @property disabled [Boolean]: Whether the property should be disabled as it's initial state. This can also be toggled with the @code(js)[disabled(property, disabled)] method.
              @default false
            @property hidden [Boolean]: Whether the property should be hidden as it's initial state. This can also be toggled with the @code(js)[hidden(property, hidden)] method.
              @default false

        @method addTextArea
          @param name [String]
          @param? options [Object]
            @property disabled [Boolean]: Whether the property should be disabled as it's initial state. This can also be toggled with the @code(js)[disabled(property, disabled)] method.
              @default false
            @property hidden [Boolean]: Whether the property should be hidden as it's initial state. This can also be toggled with the @code(js)[hidden(property, hidden)] method.
              @default false

        @method addTimePicker
          @param name [String]
          @param? options [Object]
            @property disabled [Boolean]: Whether the property should be disabled as it's initial state. This can also be toggled with the @code(js)[disabled(property, disabled)] method.
              @default false
            @property hidden [Boolean]: Whether the property should be hidden as it's initial state. This can also be toggled with the @code(js)[hidden(property, hidden)] method.
              @default false

        @method addUrl
          @param name [String]
          @param? options [Object]
            @property disabled [Boolean]: Whether the property should be disabled as it's initial state. This can also be toggled with the @code(js)[disabled(property, disabled)] method.
              @default false
            @property hidden [Boolean]: Whether the property should be hidden as it's initial state. This can also be toggled with the @code(js)[hidden(property, hidden)] method.
              @default false
