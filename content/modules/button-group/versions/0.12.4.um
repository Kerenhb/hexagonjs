@version 0.12.4

  @description
    A method of selecting a value from a range of values using grouped buttons.

  @examples
    @example
      @html html
        <div id="buttonGroup1"></div>
        <br>
        <div id="buttonGroup2"></div>
      @js
        buttonGroup = new hx.ButtonGroup('#buttonGroup1')
        buttonGroup.items(['Option 1', 'Option 2', 'Option 3', 'Option 4', 'Other']);


        // Full width example with individual active classes per-button
        buttonGroup = new hx.ButtonGroup('#buttonGroup2', {fullWidth: true})
        buttonGroup.items([
          {
            value: 'Positive',
            activeClass: 'hx-positive'
          }, {
            value: 'Warning',
            activeClass: 'hx-warning'
          }, {
            value: 'Negative',
            activeClass: 'hx-negative'
          }, {
            value: 'Info',
            activeClass: 'hx-info'
          },
          'Other'
        ]);
        buttonGroup.value('Positive');

  @api Button Group
    @prototype hx.ButtonGroup
      @description
      @added
      @extends EventEmitter

      @constructor
        @param selector [String/HTMLElement]: The target button to set the select up in.
        @param? options [Object]: The options to use when creating the button group.
          @property activeClass [String]: The button class to use for the active button.
            @default 'hx-contrast'
          @property buttonClass [String]: The button class to use for inactive buttons.
            @default 'hx-compliment'
          @property fullWidth [Boolean]: Whether the group should span the full width of its container.
            @default false

      @method items
        @description: Sets the list of items that will be shown in the button group
        @param items [Array[Any]]:
          @description:
            @p: The list of items that can be selected. This can either be an array of string, or an array of objects with value properties (and other information for displaying the items).
            @p: In addition to the value property, an activeClass property can also be provided that will be applied when a button is clicked instead of the activeClass provided in the constructor.
            @codeblock js
              [
                'Button Text', // Strings and objects can be mixed if required
                {
                  value: 'Button Text' // If objects are used, the value property is required
                },
                {
                  value: 'Button Text',
                  activeClass: 'hx-positive' // The activeClass property is optional.
                }
              ]
            @p: A custom renderer may be set if alternative object structures are required.

        @returns ButtonGroup: Returns this button group for chaining

      @method value
        @description: Sets or gets the currently selected item.
        @param? value [String]: The value of the item to select. For objects items, this should be the value of the 'value' property.
        @returns ButtonGroup: This ButtonGroup.

      @method value
        @description: Gets the currently selected item. If objects were set for the items, this will return the entire object for the selected button (not just the value string).
        @returns Any: The currently selected item.

      @method renderer
        @description: A method for overriding the default button renderer.
        @param render [Function]
          @description:
            @p: The render function to call when rendering the buttons
            @p: The default render function is as follows:
            @codeblock js
              function(node, data, current) {
                hx.select(node).text(data.value != null ? data.value : data);
              }
            @p: Setting a custom renderer will not change the 'click' method for setting the data or how the classes are added to the buttons.
          @param node [HTMLElement]: The button node.
          @param data [String/Object]: The data for the item, as passed into the 'items' method
          @param current [Boolean]: Whether the element is the currently selected element.

      @method on
        @description: Register a function that should be called every time an event of the given name happens.
        @param name [String]: The event type to listen out for
        @param callback [Function]
          @description: The function to call when an event occurs.
          @param data [Any]: The data sent along with the event (if any)

        @event change
          @description
            The event called when the selected item is changed.
          @data [String]: The value that was selected.

        @returns ButtonGroup: This button group