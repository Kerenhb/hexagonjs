@version 0.13.0
  @examples
    @example
      @html
        <div id="pb1" class="hx-progress-bar"></div>
        <div id="pb2" class="hx-progress-bar hx-positive"></div>
        <div id="pb3" class="hx-progress-bar hx-warning"></div>
        <div id="pb4" class="hx-progress-bar hx-negative"></div>
        <div id="pb5" class="hx-progress-bar hx-info"></div>
        <div id="pb6" class="hx-progress-bar hx-compliment"></div>
        <div id="pb7" class="hx-progress-bar hx-contrast"></div>
      @js
        new hx.ProgressBar('#pb1', {value: 0.25})
        new hx.ProgressBar('#pb2', {value: 0.33})
        new hx.ProgressBar('#pb3', {value: 0.42})
        new hx.ProgressBar('#pb4', {value: 0.5})
        new hx.ProgressBar('#pb5', {value: 0.58})
        new hx.ProgressBar('#pb6', {value: 0.67})
        new hx.ProgressBar('#pb7', {value: 0.75})


  @api Progress Bar
    @prototype hx.ProgressBar
      @constructor
        @description: Creates a progress bar
        @param selector [String/HTMLElement]: The selector to create the progressbar inside.
        @removed: Added options to the constructor


      @constructor
        @added: Added options to the constructor

        @description: Creates a progress bar
        @param selector [String/HTMLElement]: The selector to create the progressbar inside.
        @param? options [Object]: The options to use when setting up the progressbar.
          @property segments [Array]: The array of segments to initialise the progressbar with.
          @property value [Number]: The value of the progressbar when it is initialised
            @default 0
          @property animate [Boolean]: Whether to animate the progress changes for the progressbar by adding the hx-animate class.
            @default false


      @method segments
        @description: A method for applying an array of segments to a progress bar.
        @param segments [Array]
          @updated: Added the ability to clear the segments by passing in undefined as the segments parameter.

          @description:
            @p: The array of segments to apply. It should be in the format of an array of objects with a value or ratio property and an optional class property.
            @p: Every segment must have either a value or a ratio and every item in the array of segments must have the same property, values and ratios can not be used in conjunction with one another.

            @p: If only a class is provided for each segment, the progressbar will use a default ratio of 1:1 for every segment.
            @codeblock js
              [
                { // Segment would be 25% of the total size of the progress bar and positive
                  "class": "hx-positive"
                  "value": 0.25
                },
                { // Segment would be 75% of the total size of the progress bar
                  "value": 0.75
                }
              ]

            @p: The below segments array would give one negative segment of 60% width, one warning segment of 20% width and one positive segment of 20% width.
            @codeblock js
              [
                {
                  "class": "hx-negative"
                  "ratio": 3
                }
                {
                  "class": "hx-warning"
                }
                {
                  "class": "hx-positive"
                  "ratio": 1
                }
              ]
            @p: Passing in undefined as the segments parameter clears the segments and sets the progressbar to a single bar. The retainProgress parameter can be used in conjuntion with this to retain the current progress.
        @param? retainProgress [Boolean]: Whether to retain the current progress of the progressbar.
          @default false

