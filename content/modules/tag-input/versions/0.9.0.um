@version 0.9.0

  @description
    A component for inputting tags.

  @examples
    @example
      @html
        <div id="tag-input"></div>
      @js
        var tagInput = new hx.TagInput('#tag-input')
        tagInput.add('tag-1')
        tagInput.add('tag-2')
        tagInput.add('tag-3')
    @example
      @html
        <div id="tag-input-2"></div>
      @js
        var classifier = function(value) {
          switch(value){
            case 'hello':
              return 'hx-positive'
            case 'goodbye':
              return 'hx-negative'
          }
        }

        var tagInput = new hx.TagInput('#tag-input-2', classifier)
        tagInput.add('hello', 'hx-positive')
        tagInput.add('goodbye', 'hx-negative')
        tagInput.add(['tag', 'tag2'])


  @api Tag Input
    @prototype hx.TagInput
      @extends EventEmitter
      @description: Initialises a tag input.
      @constructor
        @param selector [String/HTMLElement]: A css selector that uniquely identifies the collapsible in the DOM.
        @param? classifier [Function]: Provides a way to apply css classes to tags.
          @param tag [String]: The tag to classify
          @returns String: The css class to give a tag.
        @param? validator [Function]
          @description
            A function to prevent the user from adding certain tags.
            @html: <div id="validated-tag-input"></div>
            @js
              @description
                // example: only allow non number inputs
                var validator = function(name) {
                  if (!isNaN(Number(name))){
                    return "please enter text";
                  }
                };
                var tagInput = new hx.TagInput('#validated-tag-input', undefined, validator);
            @codeblock
              // example: only allow non number inputs
              var validator = function(name) {
                if (!isNaN(Number(name))){
                  return "please enter text";
                }
              };
              var tagInput = new hx.TagInput('#validated-tag-input', undefined, validator);
          @param tag [String]: The tag that is being added
          @returns String: The error to show to the user. If no error exists, the return value should be an empty string.


      @method add
        @description: Adds a tag.
        @param name [String]: The tag to add
        @param? class [String]: The CSS class to give the tag.

      @method add
        @description: Adds an array of tags.
        @param tags [Array[String]]: An array of tag names to add.
        @param? class [String]: The CSS class to give the tag.

      @method remove
        @description: Removes all tags of a given value. Returns the number of tags removed.
        @param name [String]: The tag to remove.
        @returns Number

      @method removeAll
        @description: Removes all tags from the input. Returns an array of the tags removed.
        @returns [Array[String]]

      @method tags
        @description: Returns an array of the tags as strings.
        @returns [Array[String]]

      @method on
        @description: Register a function that should be called every time an event of the given name happens.
        @param name [String]: The event type to listen out for
        @param callback [Function]
          @description: The function to call when an event occurs.
          @param data [Any]: The data sent along with the event (if any)

        @event add: Emitted when a tag is added.
          @data Object
            @property value: The value of the tag
            @property type: The type of event that fired this event. Can be 'user' or 'api';
        @event remove: Emitted when a tag is removed.
          @data Object
            @property value: The value of the tag
            @property type: The type of event that fired this event. Can be 'user' or 'api';

        @returns TagInput: This TagInput

    @class hx-tag
      @description: The base class given to tags in the tag input.

      @extraclass hx-positive: The additional class to give to positive tags.
      @extraclass hx-negative: The additional class to give to negative tags.
      @extraclass hx-warning: The additional class to give to warning tags.
      @extraclass hx-info: The additional class to give to info tags.
      @extraclass hx-light: The additional class to give to light tags.
        @deprecated: Use hx-compliment instead.
      @extraclass hx-dark: The additional class to give to dark tags.
        @deprecated: Use hx-contrast instead.
      @extraclass [hx-color-[n]]
        @deprecated: All numbered color classes will be removed in a later version.Use the context classes instead.


  @theme
    @option colors
      @description: The list of colors to give the numbered tag classes
      @type color list
      @default #3D3D3D, #74B06B, #D89C4D, #697584, #C24563, #98719D, #D0D0D0
      @deprecated: All numbered color classes will be removed in a later version.

    @option default-col
      @type color
      @description: The base default tag color
      @default #6582A6

    @option positive-col
      @type color
      @description: The base positive tag color
      @default #6FB365

    @option warning-col
      @type color
      @description: The base warning tag color
      @default #CB9856

    @option negative-col
      @type color
      @description: The base negative tag color
      @default #C74967

    @option info-col
      @type color
      @description: The base info tag color
      @default #A36FA9

    @option light-col
      @type color
      @description: The base light tag color
      @default #F3F3F3
      @deprecated: Use hx-compliment instead.

    @option dark-col
      @type color
      @description: The base dark tag color
      @default #3D3D3D
      @deprecated: Use hx-contrast instead.

    @option light-text-col
      @type color
      @description: The text color to use on dark tag backgrounds
      @default #F3F3F3

    @option dark-text-col
      @type color
      @description: The text color to use on dark tag backgrounds
      @default #3D3D3D

  @seeAlso
