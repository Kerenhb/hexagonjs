@function hx.morph
  @added 0.9.0
  @description
    A factory function for creating @type[Morph] instances
  @param node [Element]
  @returns Morph
    @description: The newly constructed @type[Morph] object.

@prototype Morph
  @extends EventEmitter
  @added 0.9.0
  @description
    A class for chaining animations, asynchronous function calls, and
    synchronous function calls together.

  @method and
    @description
      Adds an action that should happen concurrently with the previous action
    @param morph [String]: The named morph to use.
    @param? duration [Number]
      @description: The length of the animation in milliseconds
      @default: 200
    @returns Animation
      @description: This @type[Morph] for chaining

  @method and
    @description
      Adds an action that should happen concurrently with the previous action
    @param function [Function]
      @description
        A function that gets called as part of the chain. If this function
        returns an @type[EventEmitter], the behaviour is to wait for that event
        emitter to emit an 'end' event before proceeding to the next step.

        Anything that is returned from this function that has a 'cancel' method
        will be called.

      @param? done [Function]
        @description
          If specified in the argument list, this action will only complete when
          this function is called to complete the action.

          If this is not specified in the argument list the function will be
          called synchronously (ie it will block).

          The later option is useful for cleanup at the end of a morph.

    @returns Morph: This @type[Morph], for chaining.

  @method then
    @description: Adds an action that should happen after the previous action
    @param morph [String]: The named morph to use.
    @param? duration [Number]
      @description: The length of the animation in milliseconds
      @default: 200
    @returns Morph
      A new Morph object that is linked to the previous morph's end trigger.
      This morph will contain a single action - the one specified as part of
      this call to then.

  @method then
    @description: Adds an action that should happen after the previous action
    @param function [Function]
      @description
        A function that gets called as part of the chain. If this function
        returns an @type[EventEmitter], the behaviour is to wait for that
        @type[EventEmitter] to emit an 'end' event before proceeding to the next
        step.

        Anything that is returned from this function that has a @code[cancel()]
        method will be called.

      @param? done [Function]
        @description
          If specified in the argument list, this action will only complete when
          this function is called to complete the action.

          If this is not specified in the argument list the function will be
          called synchronously (ie it will block).

          The later option is useful for cleanup at the end of a morph.

    @returns Morph
      @description
        A new @type[Morph] object that is linked to the previous morph's end
        trigger. This morph will contain a single action - the one specified as
        part of this call to then.

  @method andStyle
    @description
      Adds an action that styles the element concurrently with the previous
      action
    @param property [String]: The name of the css style property to animate
    @param endValue [String/Number]: The value to animate the property to
    @param? duration [Number]: The length of the animation in milliseconds
      @default: 200
    @returns Morph
      @description: This @type[Morph] for chaining

  @method andStyle
    @description
      Adds an action that styles the element concurrently with the previous
      action
    @param property [String]: The name of the css style property to animate
    @param startValue [String/Number]: The value to animate the property from
    @param endValue [String/Number]: The value to animate the property to
    @param duration [Number]: The length of the animation in milliseconds
    @returns Morph
      @description: This @type[Morph] for chaining

  @method thenStyle
    @description
      Adds an action that styles the element after the previous action completes
    @param property [String]: The name of the css style property to animate
    @param endValue [String/Number]: The value to animate the property to
    @param? duration [Number]: The length of the animation in milliseconds
      @default: 200
    @returns Morph
      @description
        A new @type[Morph] object that is linked to the previous morph's end
        trigger. This morph will contain a single action - the one specified as
        part of this call to then.

  @method thenStyle
    @description
      Adds an action that styles the element after the previous action completes
    @param property [String]: The name of the css style property to animate
    @param startValue [String/Number]: The value to animate the property from
    @param endValue [String/Number]: The value to animate the property to
    @param duration [Number]: The length of the animation in milliseconds.
    @returns Morph
      @description
        A new @type[Morph] object that is linked to the previous morph's end
        trigger. This morph will contain a single action - the one specified as
        part of this call to then.

  @method andAttr
    @description
      Adds an action that animates an attributes value on the element
      concurrently with the previous action.
    @param property [String]: The name of the css style property to animate
    @param endValue [String/Number]: The value to animate the property to
    @param? duration [Number]: The length of the animation in milliseconds
      @default: 200
    @returns Morph
      @description: This @type[Morph] for chaining

  @method andAttr
    @description
      Adds an action that animates an attributes value on the element
      concurrently with the previous action.
    @param property [String]: The name of the css style property to animate
    @param startValue [String/Number]: The value to animate the property from
    @param endValue [String/Number]: The value to animate the property to
    @param duration [Number]: The length of the animation in milliseconds.
    @returns Morph
      @description: This @type[Morph] for chaining

  @method thenAttr
    @description
      Adds an action that animates an attributes value on the element after the
      previous action completes.
    @param property [String]: The name of the css style property to animate
    @param endValue [String/Number]: The value to animate the property to
    @param? duration [Number]: The length of the animation in milliseconds
      @default: 200
    @returns Morph
      @description
        A new @type[Morph] object that is linked to the previous morph's end
        trigger. This morph will contain a single action - the one specified as
        part of this call to then.

  @method thenAttr
    @description
      Adds an action that animates an attributes value on the element after the
      previous action completes.
    @param property [String]: The name of the css style property to animate
    @param startValue [String/Number]: The value to animate the property from
    @param endValue [String/Number]: The value to animate the property to
    @param duration [Number]: The length of the animation in milliseconds.
    @returns Morph
      @description
        A new @type[Morph] object that is linked to the previous morph's end
        trigger. This morph will contain a single action - the one specified as
        part of this call to then.

  @method go
    @description
      Starts this morph. This should always be called at the end of the chain
      of actions.
    @param? cancelOngoing [Boolean]
      @description: Stops any ongoing morphs for the selected node
      @default: false
    @returns Morph
      @description: This @type[Morph] for chaining

  @event end
    @description
      Emitted when the entire chain of actions have finished for this morph.

  @event cancelled
    @description: Emitted when cancel() is called on this animation.
