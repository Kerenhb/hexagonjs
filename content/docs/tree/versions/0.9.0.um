@version 0.9.0

  @description
    A tree layout component

  @installation

  @examples
    @example
      @html: @inline 0.9.0/example.html
      @js js: @inline 0.9.0/example.js

  @api Tree

    @prototype hx.Tree
      @description: Create one of these for each tree layout in your page. This object provides a way to fill out tree layouts from an array of objects, and also makes it possible to listen out for tree expansion and contraction events. It also makes it possible to expand / collapse parts of the tree using the api.
      @method render
        @description: A method to set up a tree layout from a nested array of javascript objects.
        @param data [Array[Object]]
          @description
            A nested array of objects that represent nodes in the tree.
            An array that takes the following form:
            @codeblock js
              @inline 0.9.0/exampleData.json

            The data object should be an array of objects that represent the first level of nodes in the tree. Each of these nodes can contain children - they can have a 'children' field which refers to an array of the child nodes. A node can also contain other properties, which will contain the information you wish to fill the node out with. If the example above, the "name" and "color" fields are properties that we have chosen to give to each node, and might used when rendering each node.
            Note that other than the 'children' field, it is up to you what you call any other properties in each node.
        @param renderer [Function]
          @description
            A function that turns object nodes to dom elements.
            An example renderer:
            @codeblock javascript
              var renderer = function(element, datum) {
                element.innerHTML = datum.name
                element.style.color = datum.color || 'black'
              }

            This will set the text of each node to the property 'name' in the json data, and will set the color of the node to the 'color' property if it is present.
            Note that you can do anything here - you can append new elements to the element supplied and fill out the node with arbitrary blocks of html. This is the part where you define what the contents of each node is going to look like.

          @param node [HTMLElement]: The element to populate.
          @param data [Any]: The data to populate the element with.

      @constructor
        @description: Sets up / prepares a selection for displaying data in an expandable tree.
        @param selection [String/HTMLElement]: A unique css selector or a HTMLElement that identifies your tree.
        @param? hideDisabledButtons [Boolean]: A parameter that hides the 'disabled' buttons added to the tree.
          @default: false

      @method show
        @description: Shows all the nodes for the selected tree.
        @param? animate [Boolean]
          @description
            Whether or not to animate the toggle when expanding the tree.
            @default: true
        @returns Tree: This Tree

      @method show
        @description: Shows a specific tree node's children.
        @param animate [Boolean]: Whether or not to animate the toggle when showing the branch of the tree.
        @param node [HTMLElement]
          @description
            Specifies a specific node to show. Must be passed a <span class="pill">hx-tree-node</span> node.
            If the node is hidden and part of a nested set of children, this function will traverse up the tree and make all required elements visible.
        @returns Tree: This Tree

      @method hide
        @description: Hides all the nodes for the selected tree.
        @param? animate [Boolean]
          @description
            Whether or not to animate the toggle when hiding the tree.
            @default: true
        @returns Tree: This Tree

      @method hide
        @description: Shows a specific tree node's children.
        @param animate [Boolean]: Whether or not to animate the toggle when hiding the branch of the tree.
        @param node [HTMLElement]: Specifies a node for which to hide the content. Must be passed a <span class="pill">hx-tree-node</span> node.
        @returns Tree: This Tree

    @function hx.initialiseTrees
      @description: Initialises all the trees that match a css selector in a page and returns the Tree objects as an array.
      @param selector [String]: A css selector that selects the tab groups you wish to initialise.

    @class hx-tree
      @description: The class to give to tree elements. When building trees using the @code[render] method, these classes will be added to content automatically.

      @childclass hx-tree-node: The class to give to tree nodes. These should be directly inside @code[hx-tree] or @code[hx-tree-node-children] elements.
        @childclass hx-tree-node-parent: The class to give to the parent element for a tree. This should always be placed directly inside a @code[hx-tree-node] and before a @code[hx-tree-node-children] element.
          @childclass hx-tree-node-content: The content for the parent element. Should always be placed directly inside a @code[hx-tree-node-parent] element.
        @childclass hx-tree-node-children: The class to give to the children element for a tree. This should always be placed directly inside a @code[hx-tree-node] and after a @code[hx-tree-node-parent] element.
        @childclass hx-tree-node-content: The class to give to any content within a tree node, should be placed directly inside a @code[hx-tree-node] that doesn't include @code[hx-tree-node-parent] or @code[hx-tree-node-children].

      @extraclass [hx-tree-[n]]: Numbered classes for coloring the tree icons.
        @deprecated: All numbered color classes will be removed in a later version.Use the context classes instead.



  @theme
    @option icon-background-hover-colors
      @description: The list of background colors for the expand icons for the numbered color classes
      @type color list
      @default: #3D3D3D, #74B06B, #D89C4D, #697584, #C24563, #98719D, #D0D0D0
      @deprecated: All numbered color classes will be removed in a later version.

    @option icon-text-hover-colors
      @description: The list of text colors for the expand icons for the numbered color classes
      @type color list
      @default: #FFFFFF, #FFFFFF, #FFFFFF, #FFFFFF, #FFFFFF, #FFFFFF, #000000
      @deprecated: All numbered color classes will be removed in a later version.

    @option icon-background-col
      @type color
      @description: The default background color for the expand icon
      @default: #FFF

    @option icon-background-hover-col
      @type color
      @description: The default background color for the expand icon on hover
      @default: #6582A6

    @option icon-text-col
      @type color
      @description: The default text color for the expand icon
      @default: #000

    @option icon-text-hover-col
      @type color
      @description: The default text color for the expand icon on hover
      @default: #F3F3F3

    @option item-border-left-col
      @type color
      @description: The color of the line to the left of all children of a parent
      @default: #F3F3F3

    @option icon-disabled-background-col
      @type color
      @description: The color of the expand icon background when disabled
      @default: #FAFAFA

    @option icon-disabled-text-col
      @type color
      @description: The color of the expand icon text when disabled
      @default: #939393

    @option background-col
      @type color
      @description: The background color of an item in the tree
      @default: #F7F7F7



  @seeAlso
