@version 0.15.2
  @examples

    @example
      @html
        <div class="cardExample hx-group hx-horizontal">
          <div class="hx-card hx-section">
            <div class="hx-card-section hx-card-header">
              <span class="hx-header">Card Header</span>
            </div>
            <div class="hx-card-section">
              <div class="hx-card-text">Card Content</div>
            </div>
          </div>
          <div class="hx-card hx-section">
            <div class="hx-card-section hx-card-header hx-card-small">
              <span class="hx-header">Card Header</span>
            </div>
            <div class="hx-card-section">
              <div class="hx-card-text">Card Content</div>
            </div>
          </div>
          <div class="hx-card hx-section">
            <div class="hx-card-header hx-card-group">
              <div class="hx-card-section">
                <span class="hx-header">Card Header Section</span>
              </div>
              <div class="hx-card-section">
                <span class="hx-header">Card Header Section</span>
              </div>
            </div>
            <div class="hx-card-section">
              <div class="hx-card-text">Card Content</div>
            </div>
          </div>
        </div>

      @css
        .cardExample {
          /* Make the cards only take up as much height as they need */
          align-items: flex-start;
        }

@version 1.0.0
  @examples
    @example
      @html
        <div id="card-container"></div>

      @js
        function titleText (title, text) {
          return hx.card.section()
            .add(hx.card.title({text: title}))
            .add(hx.card.text({text: text}))
        }

        function sparkline (options) {
          return hx.card.group()
            .add(hx.card.fixed.section().add(hx.card.text({text: options.text})))
            .add(hx.card.section().add(hx.sparkline({strokeColor: options.sparklineColor, data: options.sparklineData})))
        }

        function random (i) {
          return {
            x: i,
            y: Math.random()
          }
        }

        function statusCard (name, context) {
          return hx.card()
            .add(hx.card.header.section({ context: context})
              .add(hx.card.title({text: name})))
            .add(hx.card.header.group()
              .add(titleText('Status', 'Normal'))
              .add(titleText('Uptime', '5 days'))
              .add(titleText('Memory Usage', '482 MB'))
              .add(titleText('Thread Count', '19'))
              .add(titleText('Page Hits', '2236 / s')))
            .add(hx.card.aligned()
              .add(sparkline({text: 'Memory Use', sparklineColor: hx.theme.plot.colors[0], sparklineData: hx.range(60).map(random)}))
              .add(sparkline({text: 'Thread Count', sparklineColor: hx.theme.plot.colors[1], sparklineData: hx.range(60).map(random)}))
              .add(sparkline({text: 'Page Hits', sparklineColor: hx.theme.plot.colors[2], sparklineData: hx.range(60).map(random)}))
              .add(sparkline({text: 'Messages Processed', sparklineColor: hx.theme.plot.colors[3], sparklineData: hx.range(60).map(random)})))
        }

        hx.select('#card-container')
          .add(statusCard('Instance 1', undefined))
          .add(statusCard('Instance 2', 'positive'))
          .add(statusCard('Instance 3', 'negative'))

@version 1.4.0
  @examples
    @example
      @html
        <div id="card-container"></div>

      @js
        function titleText (title, text) {
          return hx.card.section()
            .add(hx.detached('div')
              .add(hx.card.title({text: title})))
            .add(hx.detached('div')
            .add(hx.card.text({text: text})))
        }

        function sparkline (options) {
          return hx.card.group()
            .add(hx.card.fixed.section().add(hx.card.text({text: options.text})))
            .add(hx.card.section().add(hx.sparkline({strokeColor: options.sparklineColor, data: options.sparklineData})))
        }

        function random (i) {
          return {
            x: i,
            y: Math.random()
          }
        }

        function statusCard (name, context) {
          return hx.card()
            .add(hx.card.header.section({ context: context})
              .add(hx.card.title({text: name})))
            .add(hx.card.header.group()
              .add(titleText('Status', 'Normal'))
              .add(titleText('Uptime', '5 days'))
              .add(titleText('Memory Usage', '482 MB'))
              .add(titleText('Thread Count', '19'))
              .add(titleText('Page Hits', '2236 / s')))
            .add(hx.card.aligned()
              .add(sparkline({text: 'Memory Use', sparklineColor: hx.theme.plot.colors[0], sparklineData: hx.range(60).map(random)}))
              .add(sparkline({text: 'Thread Count', sparklineColor: hx.theme.plot.colors[1], sparklineData: hx.range(60).map(random)}))
              .add(sparkline({text: 'Page Hits', sparklineColor: hx.theme.plot.colors[2], sparklineData: hx.range(60).map(random)}))
              .add(sparkline({text: 'Messages Processed', sparklineColor: hx.theme.plot.colors[3], sparklineData: hx.range(60).map(random)})))
        }

        hx.select('#card-container')
          .add(statusCard('Instance 1', undefined))
          .add(statusCard('Instance 2', 'positive'))
          .add(statusCard('Instance 3', 'negative'))

