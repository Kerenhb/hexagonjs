@version 0.9.0

  @description
    A utility for filtering data using various methods such as 'exact' and 'contains'

  @examples
    @@codeblock js
      stringArray = [
        'Steve 34',
        'Kate 56',
        'Dave 12',
        'Steve 12',
        'Bob 78',
        'Alejandro 90'
      ]
      hx.filter.contains(stringArray, 've') // returns ['Dave 12', 'Steve 12', 'Steve 34'];
      hx.filter.startsWith(stringArray, 's') // returns ['Steve 12', 'Steve 34'];
      hx.filter.exact(stringArray, 'Bob') // returns [];
      hx.filter.exact(stringArray, 'Bob 78') // returns ['Bob 78'];
      hx.filter.fuzzy(stringArray, 'e1') // returns ['Dave 12', 'Steve 12'];

  @api Filter
    @object hx.filter
      @description: An object containing different methods for filtering arrays.
      @function fuzzy
        @description
          A function that allows filtering of array values that contain the letters in a search term in the same order but not necessarily directly after each other.
          @@codeblock js
            array = ['Bob Stevenson', 'Steve Stevenson', 'Dave Peters']
            hx.filter.fuzzy(array, 'ss') // returns ['Steve Stevenson', 'Bob Stevenson'] as the match in Steve Stevenson is stronger.
        @arg array [Array]: The array to filter
        @arg term [String]: The term to filter on
        @arg? options [Object]
          @description
            The options to use when filtering
          @property caseSensitive [Boolean]: Whether the filtering should be case sensitive.
            @default: false
          @property sort [Boolean]: Whether to sort the results.
            @default: true
          @property searchValues [Function]
            @description
              A function used to return values to allow searching on properties within objects or nested arrays. To search object properties, each property must be returned in an array:
              @@codeblock js
                array = [
                  {
                    name: 'Bob',
                    age: 12
                  }
                  ...
                ];
                getValues = function(item){
                  return [item.name, item.age] // would return ['Bob', 12] for the selected array
                };
                hx.filter.fuzzy(array, 'bob', {searchValues: getValues});

              Nested arrays can also be searched by returning the item itself as the array:
              @@codeblock js
                array = [
                  ['Bob', 12]
                  ...
                ];
                getValues = function(item){
                  return item;
                };
                hx.filter.fuzzy(array, 'bob', {searchValues: getValues});
            @arg item [Any]: The item from the array passed into hx.filter
            @returns Array: an array of values that should be searched when filtering/sorting
        @returns Array: The filtered/sorted array


      @function exact
        @description
          A function that allows filtering of array values that match a search term exactly.
        @arg array [Array]: The array to filter
        @arg term [String]: The term to filter on
        @arg? options [Object]
          @description
            The options to use when filtering
          @property caseSensitive [Boolean]: Whether the filtering should be case sensitive.
            @default: false
          @property sort [Boolean]: Whether to sort the results.
            @default: true
          @property searchValues [Function]
            @description
              A function used to return values to allow searching on properties within objects or nested arrays. To search object properties, each property must be returned in an array:
              @@codeblock js
                array = [
                  {
                    name: 'Bob',
                    age: 12
                  }
                  ...
                ];
                getValues = function(item){
                  return [item.name, item.age] // would return ['Bob', 12] for the selected array
                };
                hx.filter.exact(array, 'bob', {searchValues: getValues});

              Nested arrays can also be searched by returning the item itself as the array:
              @@codeblock js
                array = [
                  ['Bob', 12]
                  ...
                ];
                getValues = function(item){
                  return item;
                };
                hx.filter.exact(array, 'bob', {searchValues: getValues});
            @arg item [Any]: The item from the array passed into hx.filter
            @returns Array: an array of values that should be searched when filtering/sorting
        @returns Array: The filtered/sorted array


      @function startsWith
        @description
          A function that allows filtering of array values that start with a search term.
        @arg array [Array]: The array to filter
        @arg term [String]: The term to filter on
        @arg? options [Object]
          @description
            The options to use when filtering
          @property caseSensitive [Boolean]: Whether the filtering should be case sensitive.
            @default: false
          @property sort [Boolean]: Whether to sort the results.
            @default: true
          @property searchValues [Function]
            @description
              A function used to return values to allow searching on properties within objects or nested arrays. To search object properties, each property must be returned in an array:
              @@codeblock js
                array = [
                  {
                    name: 'Bob',
                    age: 12
                  }
                  ...
                ];
                getValues = function(item){
                  return [item.name, item.age] // would return ['Bob', 12] for the selected array
                };
                hx.filter.startsWith(array, 'bob', {searchValues: getValues});

              Nested arrays can also be searched by returning the item itself as the array:
              @@codeblock js
                array = [
                  ['Bob', 12]
                  ...
                ];
                getValues = function(item){
                  return item;
                };
                hx.filter.startsWith(array, 'bob', {searchValues: getValues});
            @arg item [Any]: The item from the array passed into hx.filter
            @returns Array: an array of values that should be searched when filtering/sorting
        @returns Array: The filtered/sorted array


      @function contains
        @description
          A function that allows filtering of array values that contain a search term.
        @arg array [Array]: The array to filter
        @arg term [String]: The term to filter on
        @arg? options [Object]
          @description
            The options to use when filtering
          @property caseSensitive [Boolean]: Whether the filtering should be case sensitive.
            @default: false
          @property sort [Boolean]: Whether to sort the results.
            @default: true
          @property searchValues [Function]
            @description
              A function used to return values to allow searching on properties within objects or nested arrays. To search object properties, each property must be returned in an array:
              @@codeblock js
                array = [
                  {
                    name: 'Bob',
                    age: 12
                  }
                  ...
                ];
                getValues = function(item){
                  return [item.name, item.age] // would return ['Bob', 12] for the selected array
                };
                hx.filter.contains(array, 'bob', {searchValues: getValues});

              Nested arrays can also be searched by returning the item itself as the array:
              @@codeblock js
                array = [
                  ['Bob', 12]
                  ...
                ];
                getValues = function(item){
                  return item;
                };
                hx.filter.contains(array, 'bob', {searchValues: getValues});
            @arg item [Any]: The item from the array passed into hx.filter
            @returns Array: an array of values that should be searched when filtering/sorting
        @returns Array: The filtered/sorted array


      @function less
        @description
          A function that allows filtering of array values that are less than or equal to a search term.
        @arg array [Array]: The array to filter
        @arg term [String]: The term to filter on
        @arg? options [Object]
          @description
            The options to use when filtering
          @property caseSensitive [Boolean]: Whether the filtering should be case sensitive.
            @default: false
          @property sort [Boolean]: Whether to sort the results.
            @default: true
          @property searchValues [Function]
            @description
              A function used to return values to allow searching on properties within objects or nested arrays. To search object properties, each property must be returned in an array:
              @@codeblock js
                array = [
                  {
                    name: 'Bob',
                    age: 12
                  }
                  ...
                ];
                getValues = function(item){
                  return [item.name, item.age] // would return ['Bob', 12] for the selected array
                };
                hx.filter.less(array, 'bob', {searchValues: getValues});

              Nested arrays can also be searched by returning the item itself as the array:
              @@codeblock js
                array = [
                  ['Bob', 12]
                  ...
                ];
                getValues = function(item){
                  return item;
                };
                hx.filter.less(array, 'bob', {searchValues: getValues});
            @arg item [Any]: The item from the array passed into hx.filter
            @returns Array: an array of values that should be searched when filtering/sorting
        @returns Array: The filtered/sorted array


      @function greater
        @description
          A function that allows filtering of array values that are greater than or equal to a search term.
        @arg array [Array]: The array to filter
        @arg term [String]: The term to filter on
        @arg? options [Object]
          @description
            The options to use when filtering
          @property caseSensitive [Boolean]: Whether the filtering should be case sensitive.
            @default: false
          @property sort [Boolean]: Whether to sort the results.
            @default: true
          @property searchValues [Function]
            @description
              A function used to return values to allow searching on properties within objects or nested arrays. To search object properties, each property must be returned in an array:
              @@codeblock js
                array = [
                  {
                    name: 'Bob',
                    age: 12
                  }
                  ...
                ];
                getValues = function(item){
                  return [item.name, item.age] // would return ['Bob', 12] for the selected array
                };
                hx.filter.greater(array, 'bob', {searchValues: getValues});

              Nested arrays can also be searched by returning the item itself as the array:
              @@codeblock js
                array = [
                  ['Bob', 12]
                  ...
                ];
                getValues = function(item){
                  return item;
                };
                hx.filter.greater(array, 'bob', {searchValues: getValues});
            @arg item [Any]: The item from the array passed into hx.filter
            @returns Array: an array of values that should be searched when filtering/sorting
        @returns Array: The filtered/sorted array


      @function excludes
        @description
          A function that allows filtering of array values that are don't contain a search term.
        @arg array [Array]: The array to filter
        @arg term [String]: The term to filter on
        @arg? options [Object]
          @description
            The options to use when filtering
          @property caseSensitive [Boolean]: Whether the filtering should be case sensitive.
            @default: false
          @property sort [Boolean]: Whether to sort the results.
            @default: true
          @property searchValues [Function]
            @description
              A function used to return values to allow searching on properties within objects or nested arrays. To search object properties, each property must be returned in an array:
              @@codeblock js
                array = [
                  {
                    name: 'Bob',
                    age: 12
                  }
                  ...
                ];
                getValues = function(item){
                  return [item.name, item.age] // would return ['Bob', 12] for the selected array
                };
                hx.filter.excludes(array, 'bob', {searchValues: getValues});

              Nested arrays can also be searched by returning the item itself as the array:
              @@codeblock js
                array = [
                  ['Bob', 12]
                  ...
                ];
                getValues = function(item){
                  return item;
                };
                hx.filter.excludes(array, 'bob', {searchValues: getValues});
            @arg item [Any]: The item from the array passed into hx.filter
            @returns Array: an array of values that should be searched when filtering/sorting
        @returns Array: The filtered/sorted array


      @function regex
        @description
          A function that allows filtering of array values using a regular expression.
        @arg array [Array]: The array to filter
        @arg term [String]
          @description
            The regular expression to filter with. It must be a regular expression string or object:
            @@codeblock js
              /bob/ //RegEx string
              new RegExp('bob') // RegEx Object
        @arg? options [Object]
          @description
            The options to use when filtering
          @property caseSensitive [Boolean]: Whether the filtering should be case sensitive.
            @default: false
          @property sort [Boolean]: Whether to sort the results.
            @default: true
          @property searchValues [Function]
            @description
              A function used to return values to allow searching on properties within objects or nested arrays. To search object properties, each property must be returned in an array:
              @@codeblock js
                array = [
                  {
                    name: 'Bob',
                    age: 12
                  }
                  ...
                ];
                getValues = function(item){
                  return [item.name, item.age] // would return ['Bob', 12] for the selected array
                };
                hx.filter.regex(array, 'bob', {searchValues: getValues});

              Nested arrays can also be searched by returning the item itself as the array:
              @@codeblock js
                array = [
                  ['Bob', 12]
                  ...
                ];
                getValues = function(item){
                  return item;
                };
                hx.filter.regex(array, 'bob', {searchValues: getValues});
            @arg item [Any]: The item from the array passed into hx.filter
            @returns Array: an array of values that should be searched when filtering/sorting
        @returns Array: The filtered/sorted array


  @theme

  @seeAlso
